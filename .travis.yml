language: python
python:
  - "3.8"
os: linux
dist: focal
group: edge
arch: arm64-graviton2

jobs:
  include:
    - stage: test
      install:
        - make install-dev
      script:
        - make coverage
      after_success:
        - sonar-scanner
      addons:
        sonarcloud:
          organization: "liamgreig1"
    - stage: ecr
      install:
        - pip install awscli
        - export PATH=$PATH:$HOME/.local/bin
        - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 502937263541.dkr.ecr.eu-west-1.amazonaws.com
        - aws ecr describe-repositories --repository-names ${TRAVIS_REPO_SLUG} --region eu-west-1 || aws ecr create-repository --repository-name ${TRAVIS_REPO_SLUG} --region eu-west-1
      script:
        - docker build -t ${TRAVIS_REPO_SLUG}:${TRAVIS_BUILD_NUMBER} .
        - docker tag ${TRAVIS_REPO_SLUG}:${TRAVIS_BUILD_NUMBER} 502937263541.dkr.ecr.eu-west-1.amazonaws.com/${TRAVIS_REPO_SLUG}:${TRAVIS_BUILD_NUMBER}
        - docker push 502937263541.dkr.ecr.eu-west-1.amazonaws.com/${TRAVIS_REPO_SLUG}:${TRAVIS_BUILD_NUMBER}
      services:
        - docker
    - stage: sandbox
      script: skip
      deploy:
        - provider: cloudformation
          region: us-east-2
          template: infra/iam.yml
          stack_name: liamsdemoIAM
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          output_file: ./iam-output.txt
          edge: true
          cleanup: false
          capabilities:
            - CAPABILITY_NAMED_IAM
          on:
            branch: main
        - provider: cloudformation
          region: us-east-2
          template: infra/ecs.yml
          stack_name: liamsdemoECS
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          output_file: ./ecs-output.txt
          edge: true
          cleanup: false
          parameters:
            - ImageURI=502937263541.dkr.ecr.eu-west-1.amazonaws.com/${TRAVIS_REPO_SLUG}:${TRAVIS_BUILD_NUMBER}
            - VPC=vpc-0db68c8942cc26bb8
            - Subnet1=subnet-074b745d4787a36ee
            - Subnet2=subnet-0ac13ac35abfbb098
            - "$(cat iam-output.txt)"
            - EnvironmentName=sandbox
          capabilities:
            - CAPABILITY_NAMED_IAM
            - CAPABILITY_AUTO_EXPAND
          on:
            branch: main
        - provider: cloudformation
          region: us-east-2
          template: infra/scaling.yml
          stack_name: liamsdemoSCALING
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          edge: true
          cleanup: false
          parameters:
            - "$(cat ecs-output.txt |grep Service=)"
            - "$(cat ecs-output.txt |grep Cluster=)"
          capabilities:
            - CAPABILITY_NAMED_IAM
          on:
            branch: main
      after_deploy:
        - echo "$(cat ecs-output.txt)"
